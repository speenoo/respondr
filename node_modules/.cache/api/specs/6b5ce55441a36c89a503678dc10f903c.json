{
  "openapi": "3.1.0",
  "info": {
    "title": "Businesses",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.yelp.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "description": "To authenticate API calls with the API Key, set the Authorization HTTP header value as `Bearer API_KEY`.\n\nExample: `Bearer 23813239889e947efd3e787cc41b0b839f442a85c5bfd30bd4b9a85ec3a54d5cae4d52b37ff52e64deb9c83bd04883812a6cebde04f2f25752f31be0ac74b514`.\n\nYou can create or find your API Key at [yelp.com](https://www.yelp.com/developers/v3/manage_app).\n",
        "in": "header"
      },
      "oauth2": {
        "type": "oauth2",
        "flows": {}
      },
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/v3/businesses/search": {
      "get": {
        "summary": "Search businesses",
        "tags": [
          "Businesses"
        ],
        "description": "This endpoint returns up to 1000 businesses with some basic information based on the provided search criteria.\n\n**Note:** The API does not return businesses without any reviews.\n",
        "operationId": "v3_business_search",
        "parameters": [
          {
            "in": "query",
            "description": "Required if either *latitude* or *longitude* is not provided.\nThis string indicates the geographic area to be used when searching for businesses.\nExamples: \"New York City\", \"NYC\", \"350 5th Ave, New York, NY 10118\".\nBusinesses returned in the response may not be strictly within the specified location.\n",
            "required": false,
            "name": "location",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 250
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "Required, if _location_ is not provided. Latitude of the location to search from. If latitude is provided, longitude is required too.",
            "name": "latitude",
            "schema": {
              "type": "number",
              "minimum": -90,
              "maximum": 90
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "Required if _location_ is not provided. Longitude of the location to search from. If longitude is provided, latitude is required too.",
            "name": "longitude",
            "schema": {
              "type": "number",
              "minimum": -180,
              "maximum": 180
            }
          },
          {
            "name": "term",
            "in": "query",
            "description": "Search term, e.g. \"food\" or \"restaurants\".\nThe term may also be the business's name, such as \"Starbucks\". If term is not included the endpoint will default to searching across businesses from a small number of popular categories.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "A suggested search radius in meters. This field is used as a suggestion to the search. The actual search radius may be lower than the suggested radius in dense urban areas, and higher in regions of less business density.\nIf the specified value is too large, a AREA_TOO_LARGE error may be returned. The max value is 40,000 meters (about 25 miles).\n",
            "required": false,
            "name": "radius",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 40000
            }
          },
          {
            "in": "query",
            "description": "Categories to filter the search results with. See the list of supported categories. The category filter can be a list of comma delimited categories.\ne.g., \"bars,french\" will filter by Bars OR French.\nThe category alias should be used (e.g. \"discgolf\", not \"Disc Golf\").\n",
            "required": false,
            "name": "categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "locale",
            "description": "Locale code in the format of {language code}_{country code}. See the [list of supported locales](https://docs.developer.yelp.com/docs/resources-supported-locales).\n",
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2,3}_[A-Z]{2}$"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "price",
            "description": "Pricing levels to filter the search result with: 1 = $, 2 = $$, 3 = $$$, 4 = $$$$. The price filter can be a list of comma delimited pricing levels.\ne.g., \"1, 2, 3\" will filter the results to show the ones that are $, $$, or $$$.\n",
            "schema": {
              "type": "array",
              "maxItems": 4,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 4
              }
            }
          },
          {
            "name": "open_now",
            "in": "query",
            "description": "When set to true, only return the businesses that are open now.\nNotice that _open_at_ and _open_now_ cannot be used together.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "open_at",
            "in": "query",
            "description": "An integer representing the Unix time in the timezone of the search location. If specified, it will return businesses open at the given time.\nNotice that *open_at* and *open_now* cannot be used together.\n",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Try these additional filters to return specific search results!\n* *hot_and_new* - popular businesses which recently joined Yelp\n* *request_a_quote* - businesses which actively reply to Request a Quote inquiries\n* *reservation* - businesses with Yelp Reservations bookings enabled on their profile page\n* *waitlist_reservation* - businesses with Yelp _Wait List_ bookings enabled on their profile screen (iOS/Android)\n* *deals* - businesses offering Yelp Deals on their profile page\n* *gender_neutral_restrooms* - businesses which provide gender neutral restrooms\n* *open_to_all* - businesses which are Open To All\n* *wheelchair_accessible* - businesses which are Wheelchair Accessible\n**Premium Access Tier** attributes:\n* *liked_by_vegetarians* - businesses which are liked by vegetarians\n* *outdoor_seating* - businesses with outdoor seating areas\n* *parking_garage* - businesses which itself has a garage or there is a parking garage nearby\n* *parking_lot* - businesses which have a parking lot\n* *parking_street* - businesses with street parking available nearby\n* *parking_valet* - businesses which offer a valet parking\n* *parking_validated* - businesses which can validate a parking ticket from an external parking\n* *parking_bike* - businesses with bike parking type\n* *restaurants_delivery* - restaurants which offer delivery service\n* *restaurants_takeout* - restaurants with take-out option\n* *wifi_free* - businesses with free WiFi\n* *wifi_paid* - businesses with paid WiFi\nYou can combine multiple attributes by providing a comma separated like \"attribute1,attribute2\".\nIf multiple attributes are used, only businesses that satisfy all the attributes will be returned in search results.\ne.g., the attributes \"*hot_and_new*,*request_a_quote*\" will return businesses that are 'Hot and New', and offer 'Request a Quote'.\n",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Suggestion to the search algorithm that the results be sorted by one of the these modes: *best_match*, *rating*, *review_count* or *distance*.\nThe default is *best_match*. Note that specifying the sort_by is a suggestion (not strictly enforced) to Yelp's search, which considers multiple input parameters to return the most relevant results.\n\ne.g., the *rating* sort is not strictly sorted by the rating value, but by an adjusted rating value that takes into account the number of ratings,\nsimilar to a Bayesian average. This is to prevent skewing results to businesses with a single review.\n",
            "required": false,
            "schema": {
              "type": "string",
              "default": "best_match",
              "enum": [
                "best_match",
                "rating",
                "review_count",
                "distance"
              ]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "device_platform",
            "description": "Determines the platform for mobile_link",
            "schema": {
              "type": "string",
              "enum": [
                "android",
                "ios",
                "mobile-generic"
              ]
            }
          },
          {
            "name": "reservation_date",
            "description": "The date for the reservation, format is YYYY-mm-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_time",
            "description": "The time of the requested reservation, format is HH:MM",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_covers",
            "description": "How many people are attending the reservation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10
            }
          },
          {
            "name": "matches_party_size_param",
            "in": "query",
            "description": "Whether to filter out results that don't have openings matching the params",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 0,
              "maximum": 50
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "offset",
            "description": "Offset the list of returned results by this amount.",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One more more businesses were found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "businesses",
                    "total",
                    "region"
                  ],
                  "properties": {
                    "businesses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A Business Yelp finds based on the search criteria.",
                        "required": [
                          "id",
                          "alias",
                          "name",
                          "image_url",
                          "is_closed",
                          "url",
                          "review_count",
                          "categories",
                          "rating",
                          "location",
                          "coordinates",
                          "transactions",
                          "phone",
                          "display_phone"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Yelp Encrypted Business ID."
                          },
                          "alias": {
                            "description": "Unique Yelp alias of this business. Can contain unicode characters.\nExample: 'yelp-san-francisco'. Also see <a href=\"https://docs.developer.yelp.com/docs/fusion-faq#whats-the-difference-between-the-yelp-business-id-and-business-alias\" target=\"_blank\">What's the difference between the Yelp business ID and business alias?</a>\n",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of this business.",
                            "type": "string"
                          },
                          "image_url": {
                            "description": "URL of photo for this business",
                            "type": "string"
                          },
                          "is_closed": {
                            "description": "Whether business has been (permanently) closed",
                            "type": "boolean"
                          },
                          "url": {
                            "description": "URL for business page on Yelp.",
                            "type": "string"
                          },
                          "review_count": {
                            "description": "Number of reviews for this business.",
                            "type": "int"
                          },
                          "categories": {
                            "description": "List of category title and alias pairs associated with this business.",
                            "type": "array",
                            "items": {
                              "description": "A list of Yelp Categories.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Category that the business falls in.",
                                "required": [
                                  "alias",
                                  "title"
                                ],
                                "properties": {
                                  "alias": {
                                    "description": "Alias of a category, when searching for business in certain categories, use alias rather than the title.",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "Title of a category for display purpose.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "rating": {
                            "description": "Rating for this business (value ranges from 1, 1.5, ... 4.5, 5).",
                            "type": "decimal"
                          },
                          "coordinates": {
                            "type": "object",
                            "description": "Coordinates of this business.",
                            "required": [
                              "latitude",
                              "longitude"
                            ],
                            "properties": {
                              "latitude": {
                                "description": "Latitude position on map.",
                                "type": "decimal"
                              },
                              "longitude": {
                                "description": "Longitude position on map.",
                                "type": "decimal"
                              }
                            }
                          },
                          "transactions": {
                            "description": "List of Yelp transactions that the business is registered for. Current supported values are **pickup**, **delivery** and **restaurant_reservation**.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "price": {
                            "description": "Price level of the business. Value is one of $, $$, $$$ and $$$$.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Location of this business, including address, city, state, zip code and country.",
                            "type": "object",
                            "required": [
                              "display_address"
                            ],
                            "properties": {
                              "address1": {
                                "description": "Street address of this business.",
                                "type": "string"
                              },
                              "address2": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "address3": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "city": {
                                "description": "City of this business.",
                                "type": "string"
                              },
                              "zip_code": {
                                "description": "[Zip code](https://en.wikipedia.org/wiki/Postal_code) of this business.",
                                "type": "string"
                              },
                              "country": {
                                "description": "[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of this business.",
                                "type": "string"
                              },
                              "state": {
                                "description": "[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) (with a few [exceptions](https://docs.developer.yelp.com/docs/resources-state-codes)) state code of this business.",
                                "type": "string"
                              },
                              "display_address": {
                                "description": "Array of strings that if organized vertically give an address that is in the standard address format for the business's country.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "cross_streets": {
                                "type": "string",
                                "description": "Cross streets of this address",
                                "nullable": true
                              }
                            }
                          },
                          "phone": {
                            "description": "Phone number of the business.",
                            "type": "string"
                          },
                          "display_phone": {
                            "description": "Phone number of the business formatted nicely to be displayed to users. The format is the standard phone number format for the business's country.",
                            "type": "string"
                          },
                          "distance": {
                            "description": "Distance in meters from the search location. This value is in meters(m) regardless of the locale.",
                            "type": "decimal"
                          },
                          "hours": {
                            "type": "array",
                            "description": "Regular business hours",
                            "items": {
                              "type": "object",
                              "required": [
                                "hour_type",
                                "open",
                                "is_open_now"
                              ],
                              "properties": {
                                "hour_type": {
                                  "type": "string",
                                  "description": "Type of business hours"
                                },
                                "open": {
                                  "type": "array",
                                  "description": "List of open hours",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "is_overnight",
                                      "start",
                                      "end",
                                      "day"
                                    ],
                                    "properties": {
                                      "day": {
                                        "type": "integer",
                                        "description": "Day of the week."
                                      },
                                      "start": {
                                        "type": "string",
                                        "description": "Start of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 1000 means 10 AM."
                                      },
                                      "end": {
                                        "type": "string",
                                        "description": "End of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 2130 means 9:30 PM."
                                      },
                                      "is_overnight": {
                                        "type": "boolean",
                                        "description": "Whether the special hours time range spans across midnight or not. When this is true, the end time will be lower than the start time."
                                      }
                                    }
                                  }
                                },
                                "is_open_now": {
                                  "type": "boolean",
                                  "description": "Whether the business is open now"
                                }
                              }
                            }
                          },
                          "attributes": {
                            "description": "Various features or facilities provided by the business.\n**Premium Access Tier** attributes:\n* *liked_by_vegetarians* - is the business liked by vegetarians\n* *liked_by_vegans* - is the business liked by vegans\n* *hot_and_new* - has the business recently joined Yelp </p>\n",
                            "type": "object"
                          }
                        }
                      }
                    },
                    "total": {
                      "description": "Total number of businesses Yelp finds based on the search criteria. Sometimes, the value may exceed 1000. In such case, you still can only get up to 1000 businesses using multiple queries and combinations of the \"limit\" and \"offset\" parameters.\n",
                      "type": "int"
                    },
                    "region": {
                      "description": "Suggested area in a map to display results in.",
                      "type": "object",
                      "required": [
                        "center"
                      ],
                      "properties": {
                        "center": {
                          "description": "Center location of the region.",
                          "type": "object",
                          "required": [
                            "latitude",
                            "longitude"
                          ],
                          "properties": {
                            "latitude": {
                              "description": "Latitude position on map.",
                              "type": "decimal"
                            },
                            "longitude": {
                              "description": "Longitude position on map.",
                              "type": "decimal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "businesses": [
                        {
                          "alias": "golden-boy-pizza-hamburg",
                          "categories": [
                            {
                              "alias": "pizza",
                              "title": "Pizza"
                            },
                            {
                              "alias": "food",
                              "title": "Food"
                            }
                          ],
                          "coordinates": {
                            "latitude": 41.7873382568359,
                            "longitude": -123.051551818848
                          },
                          "display_phone": "(415) 982-9738",
                          "distance": 4992.437696561071,
                          "id": "QPOI0dYeAl3U8iPM_IYWnA",
                          "image_url": "https://yelp-photos.yelpcorp.com/bphoto/b0mx7p6x9Z1ivb8yzaU3dg/o.jpg",
                          "is_closed": true,
                          "location": {
                            "address1": "James",
                            "address2": "Street",
                            "address3": "68M",
                            "city": "Los Angeles",
                            "country": "US",
                            "display_address": [
                              "James",
                              "Street",
                              "68M",
                              "Los Angeles, CA 22399"
                            ],
                            "state": "CA",
                            "zip_code": "22399"
                          },
                          "name": "Golden Boy Pizza",
                          "phone": "+14159829738",
                          "price": "$",
                          "rating": 4,
                          "review_count": 903,
                          "transactions": [
                            "restaurant_reservation"
                          ],
                          "url": "https://www.yelp.com/biz/golden-boy-pizza-hamburg?adjust_creative=XsIsNkqpLmHqfJ51zfRn3A&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=XsIsNkqpLmHqfJ51zfRn3A"
                        }
                      ],
                      "region": {
                        "center": {
                          "latitude": 37.76089938976322,
                          "longitude": -122.43644714355469
                        }
                      },
                      "total": 6800
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Message varies depending on failure scenario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "error": {
                        "code": "INVALID_REQUEST",
                        "description": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The API key has either expired or doesn't have the required scopes to query this endpoint.\n\n| code  | description |\n| ------------- | ------------- |\n| UNAUTHORIZED_API_KEY  | The API key provided is not currently able to query this endpoint.  |\n| TOKEN_INVALID  | Invalid API key or authorization header.  |\n",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": {
                        "code": "UNAUTHORIZED_API_KEY",
                        "description": "The API key provided is not currently able to query this endpoint."
                      }
                    }
                  },
                  "Invalid Token": {
                    "value": {
                      "error": {
                        "code": "TOKEN_INVALID",
                        "description": "Invalid API key or authorization header."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key provided is not currently able to query this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Authorization Error": {
                    "value": {
                      "error": {
                        "code": "AUTHORIZATION_ERROR",
                        "description": "Authorization Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Resource Not Found": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "description": "Resource Not Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "The length of the request exceeded the maximum allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Payload Too Large": {
                    "value": {
                      "error": {
                        "code": "PAYLOAD_TOO_LARGE",
                        "description": "Payload Too Large"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "You have either exceeded your daily quota, or have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries.",
            "content": {
              "application/json": {
                "examples": {
                  "Rate limited": {
                    "value": {
                      "error": {
                        "code": "TOO_MANY_REQUESTS_PER_SECOND",
                        "description": "You have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal Server Error": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "description": "Something went wrong internally, please try again later."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "error": {
                        "code": "SERVICE_UNAVAILABLE",
                        "description": "Service Unavailable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/businesses/search/phone": {
      "get": {
        "summary": "Search businesses by phone number",
        "tags": [
          "Businesses"
        ],
        "description": "This endpoint returns a list of businesses based on the provided phone number. It is possible for more than one business to have the same phone number (for example, chain stores with the same +1 800 phone number).\n\nNote: at this time, the API does not return businesses without any reviews.\n",
        "operationId": "v3_business_phone_search",
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "description": "Phone number of the business you want to search for. It must start with + and include the country code, like +14159083801.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 32,
              "pattern": "^[0-9 +()-.x/]+$"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "locale",
            "description": "Locale code in the format of {language code}_{country code}. See the [list of supported locales](https://docs.developer.yelp.com/docs/resources-supported-locales).\n",
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2,3}_[A-Z]{2}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One more more businesses were found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "businesses",
                    "total"
                  ],
                  "properties": {
                    "businesses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A Business Yelp finds based on the search criteria.",
                        "required": [
                          "id",
                          "alias",
                          "name",
                          "image_url",
                          "is_closed",
                          "url",
                          "review_count",
                          "categories",
                          "rating",
                          "location",
                          "coordinates",
                          "transactions",
                          "phone",
                          "display_phone"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Yelp Encrypted Business ID."
                          },
                          "alias": {
                            "description": "Unique Yelp alias of this business. Can contain unicode characters.\nExample: 'yelp-san-francisco'. Also see <a href=\"https://docs.developer.yelp.com/docs/fusion-faq#whats-the-difference-between-the-yelp-business-id-and-business-alias\" target=\"_blank\">What's the difference between the Yelp business ID and business alias?</a>\n",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of this business.",
                            "type": "string"
                          },
                          "image_url": {
                            "description": "URL of photo for this business",
                            "type": "string"
                          },
                          "is_closed": {
                            "description": "Whether business has been (permanently) closed",
                            "type": "boolean"
                          },
                          "url": {
                            "description": "URL for business page on Yelp.",
                            "type": "string"
                          },
                          "review_count": {
                            "description": "Number of reviews for this business.",
                            "type": "int"
                          },
                          "categories": {
                            "description": "List of category title and alias pairs associated with this business.",
                            "type": "array",
                            "items": {
                              "description": "A list of Yelp Categories.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Category that the business falls in.",
                                "required": [
                                  "alias",
                                  "title"
                                ],
                                "properties": {
                                  "alias": {
                                    "description": "Alias of a category, when searching for business in certain categories, use alias rather than the title.",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "Title of a category for display purpose.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "rating": {
                            "description": "Rating for this business (value ranges from 1, 1.5, ... 4.5, 5).",
                            "type": "decimal"
                          },
                          "coordinates": {
                            "type": "object",
                            "description": "Coordinates of this business.",
                            "required": [
                              "latitude",
                              "longitude"
                            ],
                            "properties": {
                              "latitude": {
                                "description": "Latitude position on map.",
                                "type": "decimal"
                              },
                              "longitude": {
                                "description": "Longitude position on map.",
                                "type": "decimal"
                              }
                            }
                          },
                          "transactions": {
                            "description": "List of Yelp transactions that the business is registered for. Current supported values are **pickup**, **delivery** and **restaurant_reservation**.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "price": {
                            "description": "Price level of the business. Value is one of $, $$, $$$ and $$$$.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Location of this business, including address, city, state, zip code and country.",
                            "type": "object",
                            "required": [
                              "display_address"
                            ],
                            "properties": {
                              "address1": {
                                "description": "Street address of this business.",
                                "type": "string"
                              },
                              "address2": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "address3": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "city": {
                                "description": "City of this business.",
                                "type": "string"
                              },
                              "zip_code": {
                                "description": "[Zip code](https://en.wikipedia.org/wiki/Postal_code) of this business.",
                                "type": "string"
                              },
                              "country": {
                                "description": "[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of this business.",
                                "type": "string"
                              },
                              "state": {
                                "description": "[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) (with a few [exceptions](https://docs.developer.yelp.com/docs/resources-state-codes)) state code of this business.",
                                "type": "string"
                              },
                              "display_address": {
                                "description": "Array of strings that if organized vertically give an address that is in the standard address format for the business's country.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "cross_streets": {
                                "type": "string",
                                "description": "Cross streets of this address",
                                "nullable": true
                              }
                            }
                          },
                          "phone": {
                            "description": "Phone number of the business.",
                            "type": "string"
                          },
                          "display_phone": {
                            "description": "Phone number of the business formatted nicely to be displayed to users. The format is the standard phone number format for the business's country.",
                            "type": "string"
                          },
                          "distance": {
                            "description": "Distance in meters from the search location. This value is in meters(m) regardless of the locale.",
                            "type": "decimal"
                          },
                          "hours": {
                            "type": "array",
                            "description": "Regular business hours",
                            "items": {
                              "type": "object",
                              "required": [
                                "hour_type",
                                "open",
                                "is_open_now"
                              ],
                              "properties": {
                                "hour_type": {
                                  "type": "string",
                                  "description": "Type of business hours"
                                },
                                "open": {
                                  "type": "array",
                                  "description": "List of open hours",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "is_overnight",
                                      "start",
                                      "end",
                                      "day"
                                    ],
                                    "properties": {
                                      "day": {
                                        "type": "integer",
                                        "description": "Day of the week."
                                      },
                                      "start": {
                                        "type": "string",
                                        "description": "Start of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 1000 means 10 AM."
                                      },
                                      "end": {
                                        "type": "string",
                                        "description": "End of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 2130 means 9:30 PM."
                                      },
                                      "is_overnight": {
                                        "type": "boolean",
                                        "description": "Whether the special hours time range spans across midnight or not. When this is true, the end time will be lower than the start time."
                                      }
                                    }
                                  }
                                },
                                "is_open_now": {
                                  "type": "boolean",
                                  "description": "Whether the business is open now"
                                }
                              }
                            }
                          },
                          "attributes": {
                            "description": "Various features or facilities provided by the business.\n**Premium Access Tier** attributes:\n* *liked_by_vegetarians* - is the business liked by vegetarians\n* *liked_by_vegans* - is the business liked by vegans\n* *hot_and_new* - has the business recently joined Yelp </p>\n",
                            "type": "object"
                          }
                        }
                      }
                    },
                    "total": {
                      "description": "Total number of businesses Yelp finds based on the search criteria. Sometimes, the value may exceed 1000. In such case, you still can only get up to 1000 businesses using multiple queries and combinations of the \"limit\" and \"offset\" parameters.\n",
                      "type": "int"
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "businesses": [
                        {
                          "alias": "golden-boy-pizza-hamburg",
                          "categories": [
                            {
                              "alias": "pizza",
                              "title": "Pizza"
                            },
                            {
                              "alias": "food",
                              "title": "Food"
                            }
                          ],
                          "coordinates": {
                            "latitude": 41.7873382568359,
                            "longitude": -123.051551818848
                          },
                          "display_phone": "(415) 982-9738",
                          "distance": 4992.437696561071,
                          "id": "QPOI0dYeAl3U8iPM_IYWnA",
                          "image_url": "https://yelp-photos.yelpcorp.com/bphoto/b0mx7p6x9Z1ivb8yzaU3dg/o.jpg",
                          "is_closed": true,
                          "location": {
                            "address1": "James",
                            "address2": "Street",
                            "address3": "68M",
                            "city": "Los Angeles",
                            "country": "US",
                            "display_address": [
                              "James",
                              "Street",
                              "68M",
                              "Los Angeles, CA 22399"
                            ],
                            "state": "CA",
                            "zip_code": "22399"
                          },
                          "name": "Golden Boy Pizza",
                          "phone": "+14159829738",
                          "rating": 4,
                          "review_count": 903,
                          "transactions": [
                            "restaurant_reservation"
                          ],
                          "url": "https://www.yelp.com/biz/golden-boy-pizza-hamburg?adjust_creative=XsIsNkqpLmHqfJ51zfRn3A&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=XsIsNkqpLmHqfJ51zfRn3A"
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Message varies depending on failure scenario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "error": {
                        "code": "INVALID_REQUEST",
                        "description": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The API key has either expired or doesn't have the required scopes to query this endpoint.\n\n| code  | description |\n| ------------- | ------------- |\n| UNAUTHORIZED_API_KEY  | The API key provided is not currently able to query this endpoint.  |\n| TOKEN_INVALID  | Invalid API key or authorization header.  |\n",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": {
                        "code": "UNAUTHORIZED_API_KEY",
                        "description": "The API key provided is not currently able to query this endpoint."
                      }
                    }
                  },
                  "Invalid Token": {
                    "value": {
                      "error": {
                        "code": "TOKEN_INVALID",
                        "description": "Invalid API key or authorization header."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key provided is not currently able to query this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Authorization Error": {
                    "value": {
                      "error": {
                        "code": "AUTHORIZATION_ERROR",
                        "description": "Authorization Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Resource Not Found": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "description": "Resource Not Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "The length of the request exceeded the maximum allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Payload Too Large": {
                    "value": {
                      "error": {
                        "code": "PAYLOAD_TOO_LARGE",
                        "description": "Payload Too Large"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "You have either exceeded your daily quota, or have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries.",
            "content": {
              "application/json": {
                "examples": {
                  "Rate limited": {
                    "value": {
                      "error": {
                        "code": "TOO_MANY_REQUESTS_PER_SECOND",
                        "description": "You have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal Server Error": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "description": "Something went wrong internally, please try again later."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "error": {
                        "code": "SERVICE_UNAVAILABLE",
                        "description": "Service Unavailable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/businesses/matches": {
      "get": {
        "summary": "Business Match",
        "tags": [
          "Businesses"
        ],
        "description": "This endpoint lets you match business data from other sources against businesses on Yelp, based on provided business information.\nFor example, if you know a business's exact address and name, and you want to find that business only on Yelp.\n\n<span style=\"color:red;font-weight:bold\">When should you use the Business Match endpoint?</span>\nWe have several endpoints that will return information on Yelp businesses. You should pick the endpoint to use based on how specific your input information is.\n\n* [Business Match endpoint](https://docs.developer.yelp.com/reference/v3_business_match) when you have precise info like name & address\n* [Business Search endpoint](https://docs.developer.yelp.com/reference/v3_business_search) when you have general info on the biz like name & location but don't know the address\n* [Phone Search endpoint](https://docs.developer.yelp.com/reference/v3_business_phone_search) when you only have the phone number or less confident about other matching criteria\n\nAll of these endpoints return the same information about each business.\n\n**Note:** at this time, the API does not return businesses without any reviews.\n",
        "operationId": "v3_business_match",
        "parameters": [
          {
            "name": "name",
            "description": "The name of the business. Only digits, letters, spaces, and !#$%&+,./:?@'are allowed.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64
            }
          },
          {
            "name": "address1",
            "description": "The first line of the business's address. Only digits, letters, spaces, and '/#&,.: are allowed. An empty string is allowed; this will specifically match certain service businesses that have no street address.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64
            }
          },
          {
            "name": "address2",
            "description": "The second line of the business's address. Only digits, letters, spaces, and '/#&,.: are allowed.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64
            }
          },
          {
            "name": "address3",
            "description": "The third line of the business's address. Only digits, letters, spaces, and '/#&,.: are allowed.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64
            }
          },
          {
            "name": "city",
            "description": "The city of the business. Only digits, letters, spaces, and '.() are allowed.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64
            }
          },
          {
            "name": "state",
            "description": "The [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) (with a few [exceptions](https://docs.developer.yelp.com/docs/resources-state-codes)) state code of this business.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 3
            }
          },
          {
            "name": "country",
            "description": "The [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of this business.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2,
              "pattern": "[A-Z]{2}"
            }
          },
          {
            "name": "postal_code",
            "description": "The [Zip code](https://en.wikipedia.org/wiki/Postal_code) of this business.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 12
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "Required, if _location_ is not provided. Latitude of the location to search from. If latitude is provided, longitude is required too.",
            "name": "latitude",
            "schema": {
              "type": "number",
              "minimum": -90,
              "maximum": 90
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "Required if _location_ is not provided. Longitude of the location to search from. If longitude is provided, latitude is required too.",
            "name": "longitude",
            "schema": {
              "type": "number",
              "minimum": -180,
              "maximum": 180
            }
          },
          {
            "name": "phone",
            "description": "The phone number of the business which can be submitted as\n(a) locally formatted with digits only (e.g., 016703080) or\n(b) internationally formatted with a leading + sign and digits only after (+35316703080).\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 32,
              "pattern": "^[0-9 +()-.x/]+$"
            }
          },
          {
            "name": "yelp_business_id",
            "description": "Unique Yelp identifier of the business if available. Used as a hint when finding a matching business.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 22,
              "maxLength": 22
            }
          },
          {
            "name": "limit",
            "description": "Number of results to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "minimum": 1,
              "maximum": 10
            }
          },
          {
            "name": "match_threshold",
            "description": "Specifies whether a match quality threshold should be applied to the matched businesses. Must be one of the following.\n**none:** Do not apply any match quality threshold; all potential business matches will be returned.\n**default:** Apply a match quality threshold such that only very closely matching businesses will be returned.\n**strict:** Apply a very strict match quality threshold.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "enum": [
                "none",
                "default",
                "strict"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One more more businesses were found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "businesses"
                  ],
                  "properties": {
                    "businesses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "alias",
                          "coordinates",
                          "location",
                          "phone",
                          "display_phone"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Yelp Encrypted Business ID."
                          },
                          "alias": {
                            "description": "Unique Yelp alias of this business. Can contain unicode characters.\nExample: 'yelp-san-francisco'. Also see [What's the difference between the Yelp business ID and business alias](https://docs.developer.yelp.com/docs/fusion-faq#whats-the-difference-between-the-yelp-business-id-and-business-alias)?\n",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the business",
                            "type": "string"
                          },
                          "coordinates": {
                            "type": "object",
                            "description": "Coordinates of this business.",
                            "required": [
                              "latitude",
                              "longitude"
                            ],
                            "properties": {
                              "latitude": {
                                "description": "Latitude position on map.",
                                "type": "decimal"
                              },
                              "longitude": {
                                "description": "Longitude position on map.",
                                "type": "decimal"
                              }
                            }
                          },
                          "location": {
                            "description": "Location of this business, including address, city, state, zip code and country.",
                            "type": "object",
                            "required": [
                              "display_address"
                            ],
                            "properties": {
                              "address1": {
                                "description": "Street address of this business.",
                                "type": "string"
                              },
                              "address2": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "address3": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "city": {
                                "description": "City of this business.",
                                "type": "string"
                              },
                              "zip_code": {
                                "description": "[Zip code](https://en.wikipedia.org/wiki/Postal_code) of this business.",
                                "type": "string"
                              },
                              "country": {
                                "description": "[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of this business.",
                                "type": "string"
                              },
                              "state": {
                                "description": "[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) (with a few [exceptions](https://docs.developer.yelp.com/docs/resources-state-codes)) state code of this business.",
                                "type": "string"
                              },
                              "display_address": {
                                "description": "Array of strings that if organized vertically give an address that is in the standard address format for the business's country.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "cross_streets": {
                                "type": "string",
                                "description": "Cross streets of this address",
                                "nullable": true
                              }
                            }
                          },
                          "phone": {
                            "description": "Phone number of the business.",
                            "type": "string"
                          },
                          "display_phone": {
                            "description": "Phone number of the business formatted nicely to be displayed to users. The format is the standard phone number format for the business's country.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": [
                      {
                        "alias": "gary-danko-san-francisco",
                        "coordinates": {
                          "latitude": 37.80587,
                          "longitude": -122.42058
                        },
                        "display_phone": "(415) 824-7877",
                        "id": "WavvLdfdP6g8aZTtbBQHTw",
                        "name": "Gary Danko",
                        "location": {
                          "address1": "80 M Point St",
                          "address2": "",
                          "address3": "",
                          "city": "San Francisco",
                          "country": "US",
                          "state": "CA",
                          "zip_code": "94109"
                        },
                        "phone": "+14158247097"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Message varies depending on failure scenario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "error": {
                        "code": "INVALID_REQUEST",
                        "description": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The API key has either expired or doesn't have the required scopes to query this endpoint.\n\n| code  | description |\n| ------------- | ------------- |\n| UNAUTHORIZED_API_KEY  | The API key provided is not currently able to query this endpoint.  |\n| TOKEN_INVALID  | Invalid API key or authorization header.  |\n",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": {
                        "code": "UNAUTHORIZED_API_KEY",
                        "description": "The API key provided is not currently able to query this endpoint."
                      }
                    }
                  },
                  "Invalid Token": {
                    "value": {
                      "error": {
                        "code": "TOKEN_INVALID",
                        "description": "Invalid API key or authorization header."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key provided is not currently able to query this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Authorization Error": {
                    "value": {
                      "error": {
                        "code": "AUTHORIZATION_ERROR",
                        "description": "Authorization Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Resource Not Found": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "description": "Resource Not Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "The length of the request exceeded the maximum allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Payload Too Large": {
                    "value": {
                      "error": {
                        "code": "PAYLOAD_TOO_LARGE",
                        "description": "Payload Too Large"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "You have either exceeded your daily quota, or have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries.",
            "content": {
              "application/json": {
                "examples": {
                  "Rate limited": {
                    "value": {
                      "error": {
                        "code": "TOO_MANY_REQUESTS_PER_SECOND",
                        "description": "You have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal Server Error": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "description": "Something went wrong internally, please try again later."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "error": {
                        "code": "SERVICE_UNAVAILABLE",
                        "description": "Service Unavailable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/businesses/{business_id_or_alias}": {
      "get": {
        "summary": "Get business by Id",
        "tags": [
          "Businesses"
        ],
        "description": "This endpoint returns detailed business content.\nNormally, you would get the Business ID from [/v3/businesses/search](https://docs.developer.yelp.com/reference/v3_business_search), [/v3/businesses/search/phone](https://docs.developer.yelp.com/reference/v3_business_phone_search), [/v3/transactions/{transaction_type}/search](https://docs.developer.yelp.com/reference/v3_transaction_search) or [/v3/autocomplete](https://docs.developer.yelp.com/reference/v3_autocomplete).\nTo retrieve review excerpts for a business, please refer to our Reviews endpoint ([/v3/businesses/{id}/reviews](https://docs.developer.yelp.com/reference/v3_business_reviews))\n\n**Note:** at this time, the API does not return businesses without any reviews.\n",
        "operationId": "v3_business_info",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "business_id_or_alias",
            "description": "A unique identifier for a Yelp Business. Can be either a 22-character Yelp Business ID, or a Yelp Business Alias.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "locale",
            "description": "Locale code in the format of {language code}_{country code}. See the [list of supported locales](https://docs.developer.yelp.com/docs/resources-supported-locales).\n",
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2,3}_[A-Z]{2}$"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "device_platform",
            "description": "Determines the platform for mobile_link",
            "schema": {
              "type": "string",
              "enum": [
                "android",
                "ios",
                "mobile-generic"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Business with the requested Id was returned.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A full representation of a business",
                  "type": "object",
                  "required": [
                    "is_claimed",
                    "photos",
                    "hours"
                  ],
                  "allOf": [
                    {
                      "type": "object",
                      "description": "A Business Yelp finds based on the search criteria.",
                      "required": [
                        "id",
                        "alias",
                        "name",
                        "image_url",
                        "is_closed",
                        "url",
                        "review_count",
                        "categories",
                        "rating",
                        "location",
                        "coordinates",
                        "transactions",
                        "phone",
                        "display_phone"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Yelp Encrypted Business ID."
                        },
                        "alias": {
                          "description": "Unique Yelp alias of this business. Can contain unicode characters.\nExample: 'yelp-san-francisco'. Also see <a href=\"https://docs.developer.yelp.com/docs/fusion-faq#whats-the-difference-between-the-yelp-business-id-and-business-alias\" target=\"_blank\">What's the difference between the Yelp business ID and business alias?</a>\n",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of this business.",
                          "type": "string"
                        },
                        "image_url": {
                          "description": "URL of photo for this business",
                          "type": "string"
                        },
                        "is_closed": {
                          "description": "Whether business has been (permanently) closed",
                          "type": "boolean"
                        },
                        "url": {
                          "description": "URL for business page on Yelp.",
                          "type": "string"
                        },
                        "review_count": {
                          "description": "Number of reviews for this business.",
                          "type": "int"
                        },
                        "categories": {
                          "description": "List of category title and alias pairs associated with this business.",
                          "type": "array",
                          "items": {
                            "description": "A list of Yelp Categories.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Category that the business falls in.",
                              "required": [
                                "alias",
                                "title"
                              ],
                              "properties": {
                                "alias": {
                                  "description": "Alias of a category, when searching for business in certain categories, use alias rather than the title.",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "Title of a category for display purpose.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "rating": {
                          "description": "Rating for this business (value ranges from 1, 1.5, ... 4.5, 5).",
                          "type": "decimal"
                        },
                        "coordinates": {
                          "type": "object",
                          "description": "Coordinates of this business.",
                          "required": [
                            "latitude",
                            "longitude"
                          ],
                          "properties": {
                            "latitude": {
                              "description": "Latitude position on map.",
                              "type": "decimal"
                            },
                            "longitude": {
                              "description": "Longitude position on map.",
                              "type": "decimal"
                            }
                          }
                        },
                        "transactions": {
                          "description": "List of Yelp transactions that the business is registered for. Current supported values are **pickup**, **delivery** and **restaurant_reservation**.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "price": {
                          "description": "Price level of the business. Value is one of $, $$, $$$ and $$$$.",
                          "type": "string"
                        },
                        "location": {
                          "description": "Location of this business, including address, city, state, zip code and country.",
                          "type": "object",
                          "required": [
                            "display_address"
                          ],
                          "properties": {
                            "address1": {
                              "description": "Street address of this business.",
                              "type": "string"
                            },
                            "address2": {
                              "description": "Street address of this business, continued.",
                              "type": "string"
                            },
                            "address3": {
                              "description": "Street address of this business, continued.",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of this business.",
                              "type": "string"
                            },
                            "zip_code": {
                              "description": "[Zip code](https://en.wikipedia.org/wiki/Postal_code) of this business.",
                              "type": "string"
                            },
                            "country": {
                              "description": "[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of this business.",
                              "type": "string"
                            },
                            "state": {
                              "description": "[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) (with a few [exceptions](https://docs.developer.yelp.com/docs/resources-state-codes)) state code of this business.",
                              "type": "string"
                            },
                            "display_address": {
                              "description": "Array of strings that if organized vertically give an address that is in the standard address format for the business's country.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "cross_streets": {
                              "type": "string",
                              "description": "Cross streets of this address",
                              "nullable": true
                            }
                          }
                        },
                        "phone": {
                          "description": "Phone number of the business.",
                          "type": "string"
                        },
                        "display_phone": {
                          "description": "Phone number of the business formatted nicely to be displayed to users. The format is the standard phone number format for the business's country.",
                          "type": "string"
                        },
                        "distance": {
                          "description": "Distance in meters from the search location. This value is in meters(m) regardless of the locale.",
                          "type": "decimal"
                        },
                        "hours": {
                          "type": "array",
                          "description": "Regular business hours",
                          "items": {
                            "type": "object",
                            "required": [
                              "hour_type",
                              "open",
                              "is_open_now"
                            ],
                            "properties": {
                              "hour_type": {
                                "type": "string",
                                "description": "Type of business hours"
                              },
                              "open": {
                                "type": "array",
                                "description": "List of open hours",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "is_overnight",
                                    "start",
                                    "end",
                                    "day"
                                  ],
                                  "properties": {
                                    "day": {
                                      "type": "integer",
                                      "description": "Day of the week."
                                    },
                                    "start": {
                                      "type": "string",
                                      "description": "Start of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 1000 means 10 AM."
                                    },
                                    "end": {
                                      "type": "string",
                                      "description": "End of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 2130 means 9:30 PM."
                                    },
                                    "is_overnight": {
                                      "type": "boolean",
                                      "description": "Whether the special hours time range spans across midnight or not. When this is true, the end time will be lower than the start time."
                                    }
                                  }
                                }
                              },
                              "is_open_now": {
                                "type": "boolean",
                                "description": "Whether the business is open now"
                              }
                            }
                          }
                        },
                        "attributes": {
                          "description": "Various features or facilities provided by the business.\n**Premium Access Tier** attributes:\n* *liked_by_vegetarians* - is the business liked by vegetarians\n* *liked_by_vegans* - is the business liked by vegans\n* *hot_and_new* - has the business recently joined Yelp </p>\n",
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "is_claimed": {
                          "type": "boolean",
                          "description": "Whether business has been claimed by a business owner"
                        },
                        "date_opened": {
                          "type": "string",
                          "description": "Business opening date"
                        },
                        "date_closed": {
                          "type": "string",
                          "description": "Business closing date"
                        },
                        "photos": {
                          "type": "array",
                          "description": "URLs of up to three photos of the business. <p URLs of up to twelve photos of the business are available for **Premium Tier** users </p>",
                          "items": {
                            "type": "string"
                          }
                        },
                        "special_hours": {
                          "type": "array",
                          "description": "Out of the ordinary hours for the business that apply on certain dates. Whenever these are set, they will override the regular business hours found in the 'hours' field.",
                          "items": {
                            "type": "object",
                            "required": [
                              "date"
                            ],
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "An [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date string representing the date for which these special hours apply."
                              },
                              "start": {
                                "type": "string",
                                "description": "Start of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 1000 means 10 AM."
                              },
                              "end": {
                                "type": "string",
                                "description": "End of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 2130 means 9:30 PM."
                              },
                              "is_overnight": {
                                "type": "boolean",
                                "description": "Whether the special hours time range spans across midnight or not. When this is true, the end time will be lower than the start time."
                              },
                              "is_closed": {
                                "type": "boolean",
                                "description": "Whether this particular special hour represents a date where the business is closed."
                              }
                            }
                          }
                        },
                        "messaging": {
                          "type": "object",
                          "description": "Information and action links for messaging with this business via Yelp, including requesting quotes.",
                          "required": [
                            "url",
                            "use_case_text"
                          ],
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "Visit this action link URL to go directly into the business messaging flow for this business."
                            },
                            "use_case_text": {
                              "type": "string",
                              "description": "Indicates what kind of messaging can be done with the business.\ne.g., \"Request a Quote\" for a home services business, or \"Request a Consultation\" for a legal services business. This text will be localized (see <a href=\"https://docs.developer.yelp.com/docs/graphql-localization\" target=\"_blank\">Localization</a>).\n"
                            },
                            "response_rate": {
                              "type": "float",
                              "description": "Float number between 0 and 1, where 0 is never replies and 1 is always replies. <p style=\"color:red\">Premium Access Tier only</p>"
                            },
                            "response_time": {
                              "type": "integer",
                              "description": "Estimated response time in seconds. <p style=\"color:red\">Premium Access Tier only</p>"
                            }
                          }
                        },
                        "photo_count": {
                          "type": "integer",
                          "description": "Total number of photos <p style=\"color:red\">Premium Access Tier only</p>"
                        },
                        "photo_details": {
                          "type": "array",
                          "description": "List of photo details <p style=\"color:red\">Premium Access Tier only</p>",
                          "items": {
                            "type": "object",
                            "properties": {
                              "photo_id": {
                                "type": "string",
                                "description": "Unique identifier for a photo"
                              },
                              "url": {
                                "type": "string",
                                "description": "Photo URL"
                              },
                              "caption": {
                                "type": "string",
                                "description": "Photo caption"
                              },
                              "width": {
                                "type": "integer",
                                "description": "Photo width"
                              },
                              "height": {
                                "type": "integer",
                                "description": "Photo height"
                              },
                              "is_user_submitted": {
                                "type": "boolean",
                                "description": "Photo submitted by user"
                              },
                              "user_id": {
                                "type": "string",
                                "description": "Unique identifier for a user"
                              },
                              "label": {
                                "type": "string",
                                "description": "Photo label"
                              }
                            }
                          }
                        },
                        "yelp_menu_url": {
                          "type": "string",
                          "description": "Business menu URL <p style=\"color:red\">Premium Access Tier only</p>"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Result": {
                    "value": {
                      "alias": "golden-boy-pizza-hamburg",
                      "categories": [
                        {
                          "alias": "pizza",
                          "title": "Pizza"
                        },
                        {
                          "alias": "food",
                          "title": "Food"
                        }
                      ],
                      "coordinates": {
                        "latitude": 41.7873382568359,
                        "longitude": -123.051551818848
                      },
                      "display_phone": "(415) 982-9738",
                      "distance": 4992.437696561071,
                      "id": "QPOI0dYeAl3U8iPM_IYWnA",
                      "image_url": "https://yelp-photos.yelpcorp.com/bphoto/b0mx7p6x9Z1ivb8yzaU3dg/o.jpg",
                      "is_claimed": false,
                      "is_closed": true,
                      "date_opened": "",
                      "date_closed": "",
                      "location": {
                        "address1": "James",
                        "address2": "Street",
                        "address3": "68M",
                        "city": "Los Angeles",
                        "country": "US",
                        "display_address": [
                          "James",
                          "Street",
                          "68M",
                          "Los Angeles, CA 22399"
                        ],
                        "state": "CA",
                        "zip_code": "22399"
                      },
                      "name": "Golden Boy Pizza",
                      "phone": "+14159829738",
                      "photos": [
                        "https://s3-media2.fl.yelpcdn.com/bphoto/CPc91bGzKBe95aM5edjhhQ/o.jpg",
                        "https://s3-media4.fl.yelpcdn.com/bphoto/FmXn6cYO1Mm03UNO5cbOqw/o.jpg",
                        "https://s3-media4.fl.yelpcdn.com/bphoto/HZVDyYaghwPl2kVbvHuHjA/o.jpg"
                      ],
                      "photo_details": [
                        {
                          "photo_id": "CPc91bGzKBe95aM5edjhhQ",
                          "url": "https://s3-media2.fl.yelpcdn.com/bphoto/CPc91bGzKBe95aM5edjhhQ/o.jpg",
                          "caption": "Meat",
                          "width": "710,",
                          "height": "47,",
                          "is_user_submitted": "false,",
                          "user_id": "null,",
                          "label": "food"
                        },
                        {
                          "photo_id": "FmXn6cYO1Mm03UNO5cbOqw",
                          "url": "https://s3-media4.fl.yelpcdn.com/bphoto/FmXn6cYO1Mm03UNO5cbOqw/o.jpg",
                          "caption": "Dessert",
                          "width": 585,
                          "height": 78,
                          "is_user_submitted": false,
                          "user_id": "null,",
                          "label": "food"
                        },
                        {
                          "photo_id": "HZVDyYaghwPl2kVbvHuHjA",
                          "url": "https://s3-media4.fl.yelpcdn.com/bphoto/HZVDyYaghwPl2kVbvHuHjA/o.jpg",
                          "caption": "Dessert_2",
                          "width": 710,
                          "height": 53,
                          "is_user_submitted": false,
                          "user_id": null,
                          "label": "food"
                        }
                      ],
                      "photo_count": 50,
                      "price": "$",
                      "rating": 4,
                      "review_count": 903,
                      "hours": {
                        "open": [
                          {
                            "is_overnight": false,
                            "start": 15,
                            "end": 130,
                            "day": 0
                          },
                          {
                            "is_overnight": false,
                            "start": 630,
                            "end": 1730,
                            "day": 1
                          },
                          {
                            "is_overnight": false,
                            "start": 45,
                            "end": 500,
                            "day": 2
                          }
                        ],
                        "hours_type": "REGULAR",
                        "is_open_now": false
                      },
                      "special_hours": [
                        {
                          "date": "2019-02-07",
                          "end": "2000",
                          "is_closed": null,
                          "is_overnight": false,
                          "start": "1600"
                        }
                      ],
                      "transactions": [
                        "restaurant_reservation"
                      ],
                      "url": "https://www.yelp.com/biz/golden-boy-pizza-hamburg?adjust_creative=XsIsNkqpLmHqfJ51zfRn3A&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=XsIsNkqpLmHqfJ51zfRn3A",
                      "attributes": {
                        "business_temp_closed": 1657868400,
                        "outdoor_seating": false,
                        "liked_by_vegans": false,
                        "liked_by_vegetarians": true,
                        "hot_and_new": "2022-12-10"
                      },
                      "messaging": {
                        "url": "https://www.yelp.com/raq/AA5cAADa-F9f5DPqZ-PADA?adjust_creative=5374ujususZtKiSNEg7uhg&utm_campaign=yelp_api_v3&utm_medium=api_v3_graphql&utm_source=5374upadasZtCvMLBg7uhg#popup%3Araq",
                        "use_case_text": "Request a Quote",
                        "response_rate": 1,
                        "response_time": 791
                      },
                      "yelp_menu_url": "https://www.yelp.com/menu/golden-boy-pizza-hamburg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Message varies depending on failure scenario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "error": {
                        "code": "INVALID_REQUEST",
                        "description": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The API key has either expired or doesn't have the required scopes to query this endpoint.\n\n| code  | description |\n| ------------- | ------------- |\n| UNAUTHORIZED_API_KEY  | The API key provided is not currently able to query this endpoint.  |\n| TOKEN_INVALID  | Invalid API key or authorization header.  |\n",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": {
                        "code": "UNAUTHORIZED_API_KEY",
                        "description": "The API key provided is not currently able to query this endpoint."
                      }
                    }
                  },
                  "Invalid Token": {
                    "value": {
                      "error": {
                        "code": "TOKEN_INVALID",
                        "description": "Invalid API key or authorization header."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key provided is not currently able to query this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Authorization Error": {
                    "value": {
                      "error": {
                        "code": "AUTHORIZATION_ERROR",
                        "description": "Authorization Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Resource Not Found": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "description": "Resource Not Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "The length of the request exceeded the maximum allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Payload Too Large": {
                    "value": {
                      "error": {
                        "code": "PAYLOAD_TOO_LARGE",
                        "description": "Payload Too Large"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "You have either exceeded your daily quota, or have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries.",
            "content": {
              "application/json": {
                "examples": {
                  "Rate limited": {
                    "value": {
                      "error": {
                        "code": "TOO_MANY_REQUESTS_PER_SECOND",
                        "description": "You have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal Server Error": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "description": "Something went wrong internally, please try again later."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "error": {
                        "code": "SERVICE_UNAVAILABLE",
                        "description": "Service Unavailable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/transactions/{transaction_type}/search": {
      "get": {
        "summary": "Search Business Transactions",
        "tags": [
          "Businesses"
        ],
        "description": "This endpoint returns a list of businesses which support requested transaction type.\n\n**Note:**\n* At this time, the API does not return businesses without any reviews.\n* Currently, this endpoint only supports food delivery in the US.\n",
        "operationId": "v3_transaction_search",
        "parameters": [
          {
            "name": "transaction_type",
            "in": "path",
            "required": true,
            "description": "Type of transaction supported by the business",
            "schema": {
              "type": "string",
              "default": "delivery",
              "enum": [
                "delivery"
              ]
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "Required, if _location_ is not provided. Latitude of the location to search from. If latitude is provided, longitude is required too.",
            "name": "latitude",
            "schema": {
              "type": "number",
              "minimum": -90,
              "maximum": 90
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "Required if _location_ is not provided. Longitude of the location to search from. If longitude is provided, latitude is required too.",
            "name": "longitude",
            "schema": {
              "type": "number",
              "minimum": -180,
              "maximum": 180
            }
          },
          {
            "in": "query",
            "description": "Required if either *latitude* or *longitude* is not provided.\nThis string indicates the geographic area to be used when searching for businesses.\nExamples: \"New York City\", \"NYC\", \"350 5th Ave, New York, NY 10118\".\nBusinesses returned in the response may not be strictly within the specified location.\n",
            "required": false,
            "name": "location",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 250
            }
          },
          {
            "name": "term",
            "in": "query",
            "description": "Search term, e.g. \"food\" or \"restaurants\".\nThe term may also be the business's name, such as \"Starbucks\". If term is not included the endpoint will default to searching across businesses from a small number of popular categories.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "Categories to filter the search results with. See the list of supported categories. The category filter can be a list of comma delimited categories.\ne.g., \"bars,french\" will filter by Bars OR French.\nThe category alias should be used (e.g. \"discgolf\", not \"Disc Golf\").\n",
            "name": "categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "price",
            "description": "Pricing levels to filter the search result with: 1 = $, 2 = $$, 3 = $$$, 4 = $$$$. The price filter can be a list of comma delimited pricing levels.\ne.g., \"1, 2, 3\" will filter the results to show the ones that are $, $$, or $$$.\n",
            "schema": {
              "type": "array",
              "maxItems": 4,
              "uniqueItems": true,
              "items": {
                "type": "integer",
                "minimum": 1,
                "maximum": 4
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction data for one or more businesses was returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total",
                    "businesses"
                  ],
                  "properties": {
                    "businesses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A Business Yelp finds based on the search criteria.",
                        "required": [
                          "id",
                          "alias",
                          "name",
                          "image_url",
                          "is_closed",
                          "url",
                          "review_count",
                          "categories",
                          "rating",
                          "location",
                          "coordinates",
                          "transactions",
                          "phone",
                          "display_phone"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Yelp Encrypted Business ID."
                          },
                          "alias": {
                            "description": "Unique Yelp alias of this business. Can contain unicode characters.\nExample: 'yelp-san-francisco'. Also see <a href=\"https://docs.developer.yelp.com/docs/fusion-faq#whats-the-difference-between-the-yelp-business-id-and-business-alias\" target=\"_blank\">What's the difference between the Yelp business ID and business alias?</a>\n",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of this business.",
                            "type": "string"
                          },
                          "image_url": {
                            "description": "URL of photo for this business",
                            "type": "string"
                          },
                          "is_closed": {
                            "description": "Whether business has been (permanently) closed",
                            "type": "boolean"
                          },
                          "url": {
                            "description": "URL for business page on Yelp.",
                            "type": "string"
                          },
                          "review_count": {
                            "description": "Number of reviews for this business.",
                            "type": "int"
                          },
                          "categories": {
                            "description": "List of category title and alias pairs associated with this business.",
                            "type": "array",
                            "items": {
                              "description": "A list of Yelp Categories.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Category that the business falls in.",
                                "required": [
                                  "alias",
                                  "title"
                                ],
                                "properties": {
                                  "alias": {
                                    "description": "Alias of a category, when searching for business in certain categories, use alias rather than the title.",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "Title of a category for display purpose.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "rating": {
                            "description": "Rating for this business (value ranges from 1, 1.5, ... 4.5, 5).",
                            "type": "decimal"
                          },
                          "coordinates": {
                            "type": "object",
                            "description": "Coordinates of this business.",
                            "required": [
                              "latitude",
                              "longitude"
                            ],
                            "properties": {
                              "latitude": {
                                "description": "Latitude position on map.",
                                "type": "decimal"
                              },
                              "longitude": {
                                "description": "Longitude position on map.",
                                "type": "decimal"
                              }
                            }
                          },
                          "transactions": {
                            "description": "List of Yelp transactions that the business is registered for. Current supported values are **pickup**, **delivery** and **restaurant_reservation**.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "price": {
                            "description": "Price level of the business. Value is one of $, $$, $$$ and $$$$.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Location of this business, including address, city, state, zip code and country.",
                            "type": "object",
                            "required": [
                              "display_address"
                            ],
                            "properties": {
                              "address1": {
                                "description": "Street address of this business.",
                                "type": "string"
                              },
                              "address2": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "address3": {
                                "description": "Street address of this business, continued.",
                                "type": "string"
                              },
                              "city": {
                                "description": "City of this business.",
                                "type": "string"
                              },
                              "zip_code": {
                                "description": "[Zip code](https://en.wikipedia.org/wiki/Postal_code) of this business.",
                                "type": "string"
                              },
                              "country": {
                                "description": "[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of this business.",
                                "type": "string"
                              },
                              "state": {
                                "description": "[ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) (with a few [exceptions](https://docs.developer.yelp.com/docs/resources-state-codes)) state code of this business.",
                                "type": "string"
                              },
                              "display_address": {
                                "description": "Array of strings that if organized vertically give an address that is in the standard address format for the business's country.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "cross_streets": {
                                "type": "string",
                                "description": "Cross streets of this address",
                                "nullable": true
                              }
                            }
                          },
                          "phone": {
                            "description": "Phone number of the business.",
                            "type": "string"
                          },
                          "display_phone": {
                            "description": "Phone number of the business formatted nicely to be displayed to users. The format is the standard phone number format for the business's country.",
                            "type": "string"
                          },
                          "distance": {
                            "description": "Distance in meters from the search location. This value is in meters(m) regardless of the locale.",
                            "type": "decimal"
                          },
                          "hours": {
                            "type": "array",
                            "description": "Regular business hours",
                            "items": {
                              "type": "object",
                              "required": [
                                "hour_type",
                                "open",
                                "is_open_now"
                              ],
                              "properties": {
                                "hour_type": {
                                  "type": "string",
                                  "description": "Type of business hours"
                                },
                                "open": {
                                  "type": "array",
                                  "description": "List of open hours",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "is_overnight",
                                      "start",
                                      "end",
                                      "day"
                                    ],
                                    "properties": {
                                      "day": {
                                        "type": "integer",
                                        "description": "Day of the week."
                                      },
                                      "start": {
                                        "type": "string",
                                        "description": "Start of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 1000 means 10 AM."
                                      },
                                      "end": {
                                        "type": "string",
                                        "description": "End of the opening hours in a day, in [24-hour clock](https://en.wikipedia.org/wiki/24-hour_clock) notation, like 2130 means 9:30 PM."
                                      },
                                      "is_overnight": {
                                        "type": "boolean",
                                        "description": "Whether the special hours time range spans across midnight or not. When this is true, the end time will be lower than the start time."
                                      }
                                    }
                                  }
                                },
                                "is_open_now": {
                                  "type": "boolean",
                                  "description": "Whether the business is open now"
                                }
                              }
                            }
                          },
                          "attributes": {
                            "description": "Various features or facilities provided by the business.\n**Premium Access Tier** attributes:\n* *liked_by_vegetarians* - is the business liked by vegetarians\n* *liked_by_vegans* - is the business liked by vegans\n* *hot_and_new* - has the business recently joined Yelp </p>\n",
                            "type": "object"
                          }
                        }
                      }
                    },
                    "total": {
                      "description": "Total number of businesses Yelp finds based on the search criteria. Sometimes, the value may exceed 1000. In such case, you still can only get up to 1000 businesses using multiple queries and combinations of the \"limit\" and \"offset\" parameters.\n",
                      "type": "int"
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "businesses": [
                        {
                          "alias": "golden-boy-pizza-hamburg",
                          "categories": [
                            {
                              "alias": "pizza",
                              "title": "Pizza"
                            },
                            {
                              "alias": "food",
                              "title": "Food"
                            }
                          ],
                          "coordinates": {
                            "latitude": 41.7873382568359,
                            "longitude": -123.051551818848
                          },
                          "display_phone": "(415) 982-9738",
                          "distance": 4992.437696561071,
                          "id": "QPOI0dYeAl3U8iPM_IYWnA",
                          "image_url": "https://yelp-photos.yelpcorp.com/bphoto/b0mx7p6x9Z1ivb8yzaU3dg/o.jpg",
                          "is_closed": true,
                          "location": {
                            "address1": "James",
                            "address2": "Street",
                            "address3": "68M",
                            "city": "Los Angeles",
                            "country": "US",
                            "display_address": [
                              "James",
                              "Street",
                              "68M",
                              "Los Angeles, CA 22399"
                            ],
                            "state": "CA",
                            "zip_code": "22399"
                          },
                          "name": "Golden Boy Pizza",
                          "phone": "+14123829754",
                          "price": "$",
                          "rating": 4,
                          "review_count": 903,
                          "transactions": [
                            "restaurant_reservation"
                          ],
                          "url": "https://www.yelp.com/biz/golden-boy-pizza-hamburg?adjust_creative=XsIsNkqpLmHqfJ51zfRn3A&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=XsIsNkqpLmHqfJ51zfRn3A"
                        }
                      ],
                      "total": 6800
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Message varies depending on failure scenario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "error": {
                        "code": "INVALID_REQUEST",
                        "description": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The API key has either expired or doesn't have the required scopes to query this endpoint.\n\n| code  | description |\n| ------------- | ------------- |\n| UNAUTHORIZED_API_KEY  | The API key provided is not currently able to query this endpoint.  |\n| TOKEN_INVALID  | Invalid API key or authorization header.  |\n",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": {
                        "code": "UNAUTHORIZED_API_KEY",
                        "description": "The API key provided is not currently able to query this endpoint."
                      }
                    }
                  },
                  "Invalid Token": {
                    "value": {
                      "error": {
                        "code": "TOKEN_INVALID",
                        "description": "Invalid API key or authorization header."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key provided is not currently able to query this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Authorization Error": {
                    "value": {
                      "error": {
                        "code": "AUTHORIZATION_ERROR",
                        "description": "Authorization Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Resource Not Found": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "description": "Resource Not Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "The length of the request exceeded the maximum allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Payload Too Large": {
                    "value": {
                      "error": {
                        "code": "PAYLOAD_TOO_LARGE",
                        "description": "Payload Too Large"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "You have either exceeded your daily quota, or have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries.",
            "content": {
              "application/json": {
                "examples": {
                  "Rate limited": {
                    "value": {
                      "error": {
                        "code": "TOO_MANY_REQUESTS_PER_SECOND",
                        "description": "You have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal Server Error": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "description": "Something went wrong internally, please try again later."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "error": {
                        "code": "SERVICE_UNAVAILABLE",
                        "description": "Service Unavailable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/businesses/engagement": {
      "get": {
        "summary": "Get Business engagement metrics",
        "tags": [
          "Businesses"
        ],
        "description": "Returns engagement metrics information for the provided businesses.\n<blockquote class=\"callout callout_warn\">\n  This endpoint requires special permissions to be enabled for your Yelp Fusion API Key.\n</blockquote>\n",
        "operationId": "v3_get_businesses_engagement",
        "parameters": [
          {
            "name": "business_ids",
            "description": "Business Id or alias of the businesses for which to get data.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "maxItems": 150,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date_range_start",
            "description": "Start of the date range during which to get metrics. Defaults to the beginning of the most recently available week.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date_range_end",
            "description": "End of the date range during which to get metrics. Defaults to the end of the most recently available week.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Engagement metrics for one or more businesses were returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "business_id",
                          "metrics"
                        ],
                        "properties": {
                          "business_id": {
                            "type": "string",
                            "description": "Yelp Encrypted Business ID."
                          },
                          "metrics": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "start_of_week_date"
                              ],
                              "properties": {
                                "start_of_week_date": {
                                  "type": "string",
                                  "description": "Start date of the week for which metrics was requested.",
                                  "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                                },
                                "engagement_metric": {
                                  "type": "integer",
                                  "description": "Score on a scale of 1-20 to measure consumer engagement of a particular business"
                                },
                                "intent_metric": {
                                  "type": "integer",
                                  "description": "Score on a scale of 1-10 to measure consumer intent of a particular business"
                                },
                                "transaction_metric": {
                                  "type": "integer",
                                  "description": "Score on a scale of 1-4 to measure consumer transaction with a particular business"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "business_id": "w-WAiKJe__oZV13M34pTFw",
                          "metrics": [
                            {
                              "start_of_week_date": "2022-10-17",
                              "engagement_metric": 20,
                              "intent_metric": 10,
                              "transaction_metric": 1
                            },
                            {
                              "start_of_week_date": "2021-08-30",
                              "engagement_metric": 20,
                              "intent_metric": 10,
                              "transaction_metric": 3
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Message varies depending on failure scenario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "error": {
                        "code": "INVALID_REQUEST",
                        "description": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The API key has either expired or doesn't have the required scopes to query this endpoint.\n\n| code  | description |\n| ------------- | ------------- |\n| UNAUTHORIZED_API_KEY  | The API key provided is not currently able to query this endpoint.  |\n| TOKEN_INVALID  | Invalid API key or authorization header.  |\n",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": {
                        "code": "UNAUTHORIZED_API_KEY",
                        "description": "The API key provided is not currently able to query this endpoint."
                      }
                    }
                  },
                  "Invalid Token": {
                    "value": {
                      "error": {
                        "code": "TOKEN_INVALID",
                        "description": "Invalid API key or authorization header."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key provided is not currently able to query this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Authorization Error": {
                    "value": {
                      "error": {
                        "code": "AUTHORIZATION_ERROR",
                        "description": "Authorization Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Resource Not Found": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "description": "Resource Not Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "The length of the request exceeded the maximum allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Payload Too Large": {
                    "value": {
                      "error": {
                        "code": "PAYLOAD_TOO_LARGE",
                        "description": "Payload Too Large"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "You have either exceeded your daily quota, or have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries.",
            "content": {
              "application/json": {
                "examples": {
                  "Rate limited": {
                    "value": {
                      "error": {
                        "code": "TOO_MANY_REQUESTS_PER_SECOND",
                        "description": "You have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal Server Error": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "description": "Something went wrong internally, please try again later."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "error": {
                        "code": "SERVICE_UNAVAILABLE",
                        "description": "Service Unavailable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/businesses/{business_id_or_alias}/service_offerings": {
      "get": {
        "summary": "Get Service offerings for a business",
        "tags": [
          "Businesses"
        ],
        "description": "Returns active and eligible service offerings for a business.\n<blockquote class=\"callout callout_warn\">\n  This endpoint requires special permissions to be enabled for your Yelp Fusion API Key.\n</blockquote>\n",
        "operationId": "v3_business_service_offerings",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "business_id_or_alias",
            "description": "A unique identifier for a Yelp Business. Can be either a 22-character Yelp Business ID, or a Yelp Business Alias.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "locale",
            "description": "Locale code in the format of {language code}_{country code}. See the [list of supported locales](https://docs.developer.yelp.com/docs/resources-supported-locales).\n",
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2,3}_[A-Z]{2}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service offering data was returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "active",
                    "eligible"
                  ],
                  "properties": {
                    "active": {
                      "type": "array",
                      "description": "List of service offerings that are currently active",
                      "items": {
                        "type": "string"
                      }
                    },
                    "eligible": {
                      "type": "array",
                      "description": "List of all service offerings that the business is eligible for",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "active": [
                        "bathtub_shower_installation",
                        "drain_repair",
                        "emergency_services",
                        "garbage_disposal_repair",
                        "gas_line_services",
                        "offers_electric_water_heater_installation"
                      ],
                      "eligible": [
                        "backflow_services",
                        "bathtub_shower_installation",
                        "bathtub_shower_repair",
                        "drain_installation",
                        "drain_repair",
                        "emergency_services"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Message varies depending on failure scenario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "error": {
                        "code": "INVALID_REQUEST",
                        "description": "Invalid Request"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The API key has either expired or doesn't have the required scopes to query this endpoint.\n\n| code  | description |\n| ------------- | ------------- |\n| UNAUTHORIZED_API_KEY  | The API key provided is not currently able to query this endpoint.  |\n| TOKEN_INVALID  | Invalid API key or authorization header.  |\n",
            "content": {
              "application/json": {
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": {
                        "code": "UNAUTHORIZED_API_KEY",
                        "description": "The API key provided is not currently able to query this endpoint."
                      }
                    }
                  },
                  "Invalid Token": {
                    "value": {
                      "error": {
                        "code": "TOKEN_INVALID",
                        "description": "Invalid API key or authorization header."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key provided is not currently able to query this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Authorization Error": {
                    "value": {
                      "error": {
                        "code": "AUTHORIZATION_ERROR",
                        "description": "Authorization Error"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Resource Not Found": {
                    "value": {
                      "error": {
                        "code": "NOT_FOUND",
                        "description": "Resource Not Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "The length of the request exceeded the maximum allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Payload Too Large": {
                    "value": {
                      "error": {
                        "code": "PAYLOAD_TOO_LARGE",
                        "description": "Payload Too Large"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "You have either exceeded your daily quota, or have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries.",
            "content": {
              "application/json": {
                "examples": {
                  "Rate limited": {
                    "value": {
                      "error": {
                        "code": "TOO_MANY_REQUESTS_PER_SECOND",
                        "description": "You have exceeded the queries-per-second limit for this endpoint. Try reducing the rate at which you make queries."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal Server Error": {
                    "value": {
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "description": "Something went wrong internally, please try again later."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "description"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the error."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Service Unavailable": {
                    "value": {
                      "error": {
                        "code": "SERVICE_UNAVAILABLE",
                        "description": "Service Unavailable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}